/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package projectakhir;

import javax.swing.*;
import javax.swing.table.DefaultTableModel;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;

/**
 *
 * @author USER
 */
public class HomePage_2 extends javax.swing.JFrame {

    private int selectedDokterId = -1;

    /**
     * Creates new form HomePage
     */
    public HomePage_2() {
        initComponents();
        loadDokterAndSpesialis();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel39 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel10 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel30 = new javax.swing.JLabel();
        jLabel31 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        cbdokter = new javax.swing.JComboBox<>();
        cbspesialis = new javax.swing.JComboBox<>();
        jButton1 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel9 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();

        jLabel1.setText("jLabel1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(211, 233, 255));

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));
        jPanel3.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel2.setIcon(new javax.swing.ImageIcon("C:\\Users\\USER\\OneDrive\\Pictures\\AAA\\Halo__1_-removebg-preview.png")); // NOI18N
        jLabel2.setText("jLabel2");
        jLabel2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel2MouseClicked(evt);
            }
        });
        jPanel3.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 100, 70));

        jLabel3.setFont(new java.awt.Font("Monotype Corsiva", 0, 36)); // NOI18N
        jLabel3.setText("healthMate");
        jPanel3.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(620, 0, 160, -1));

        jLabel5.setIcon(new javax.swing.ImageIcon("C:\\Users\\USER\\OneDrive\\Pictures\\AAA\\dr.png")); // NOI18N
        jLabel5.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel5MouseClicked(evt);
            }
        });
        jPanel3.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(1270, 10, 100, 60));

        jLabel8.setFont(new java.awt.Font("Cambria", 1, 14)); // NOI18N
        jLabel8.setText("Konsultasi Kesehatan terpercaya sejak 2005");
        jPanel3.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(580, 70, -1, -1));

        jLabel39.setFont(new java.awt.Font("Cambria", 1, 14)); // NOI18N
        jLabel39.setText("Layanan Cepat dan Tepat");
        jPanel3.add(jLabel39, new org.netbeans.lib.awtextra.AbsoluteConstraints(620, 40, -1, -1));

        jLabel22.setIcon(new javax.swing.ImageIcon("C:\\Users\\USER\\OneDrive\\Pictures\\AAA\\1.jpg")); // NOI18N
        jLabel22.setText("jLabel21");
        jPanel3.add(jLabel22, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, -10, 1350, -1));

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel10.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel10.setText("Copyright Â©Sarahmanuellaaaa. All rights reserved.");
        jPanel2.add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(550, 36, -1, 50));

        jLabel15.setText("Direktorat Jenderal Perlindungan Konsumen dan Tertib Niaga Kementerian Perdagangan Republik Indonesia 0853 1111 1010 (WhatsApp)");
        jPanel2.add(jLabel15, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 16, -1, 50));

        jLabel17.setText("PT Media Dokter Investama Jl. H.R. Rasuna Said Kav B32-33, Jakarta Selatan help@halodoc.com / 021-5095-9900");
        jPanel2.add(jLabel17, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, -4, -1, 50));

        jLabel7.setIcon(new javax.swing.ImageIcon("C:\\Users\\USER\\OneDrive\\Pictures\\AAA\\1.jpg")); // NOI18N
        jLabel7.setText("jLabel7");
        jPanel2.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1370, 80));

        jLabel30.setIcon(new javax.swing.ImageIcon("C:\\Users\\USER\\OneDrive\\Pictures\\AAA\\a2.png")); // NOI18N

        jLabel31.setIcon(new javax.swing.ImageIcon("C:\\Users\\USER\\OneDrive\\Pictures\\AAA\\a1.png")); // NOI18N
        jLabel31.setText("Riwayat Konsultasi");

        jLabel6.setText("Pilih");

        cbdokter.setBackground(new java.awt.Color(191, 218, 245));
        cbdokter.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "---Pilih Dokter---", "dr.SarahManuella", "dr.PutriNatasya", "dr.Ronatiur", "dr.HeniErnita", "dr.Emi", "dr.Ken", "dr.Efendi", "dr.Sontianur" }));
        cbdokter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbdokterActionPerformed(evt);
            }
        });

        cbspesialis.setBackground(new java.awt.Color(191, 218, 245));
        cbspesialis.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "---Spesialis---", "jantung", "jantung", "gigi", "hati", "mata", "THT", "kandungan" }));
        cbspesialis.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbspesialisActionPerformed(evt);
            }
        });

        jButton1.setBackground(new java.awt.Color(191, 218, 245));
        jButton1.setText("Lihat Pasien");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jTable1.setBackground(new java.awt.Color(191, 218, 245));
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null}
            },
            new String [] {
                "id_pasien", "Nama Pasien", "Umur", "Jenis Kelamin", "Keluhan", "Alergi", "Status Byar", "Status"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTable1);

        jLabel9.setText("Saran");

        jTextArea1.setBackground(new java.awt.Color(191, 218, 245));
        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane2.setViewportView(jTextArea1);

        jButton2.setBackground(new java.awt.Color(191, 218, 245));
        jButton2.setIcon(new javax.swing.ImageIcon("C:\\Users\\USER\\Downloads\\send.png")); // NOI18N
        jButton2.setText("Kirim");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setBackground(new java.awt.Color(191, 218, 245));
        jButton3.setIcon(new javax.swing.ImageIcon("C:\\Users\\USER\\Downloads\\logout (1).png")); // NOI18N
        jButton3.setText("Exit");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(44, 44, 44)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel9))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(76, 76, 76)
                                .addComponent(jButton1)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                                    .addComponent(cbdokter, 0, 228, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel31, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton3)
                        .addGap(44, 44, 44)
                        .addComponent(jButton2))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(25, 25, 25)
                                .addComponent(jLabel30))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(103, 103, 103)
                                .addComponent(cbspesialis, javax.swing.GroupLayout.PREFERRED_SIZE, 236, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 816, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(90, 90, 90))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel30)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(cbspesialis, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(cbdokter, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel31))
                        .addGap(12, 12, 12)
                        .addComponent(jButton1)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(132, 132, 132)
                                .addComponent(jLabel9))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(27, 27, 27)
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 199, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGap(28, 28, 28)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 419, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton3)
                    .addComponent(jButton2))
                .addGap(0, 46, Short.MAX_VALUE)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 1351, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jLabel5MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel5MouseClicked

    }//GEN-LAST:event_jLabel5MouseClicked

    private void cbdokterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbdokterActionPerformed
        // TODO add your handling code here:
        String selectedDokter = (String) cbdokter.getSelectedItem();
        if (!selectedDokter.equals("---Pilih Dokter---")) {
            String[] parts = selectedDokter.split("\\."); // Memisahkan berdasarkan titik
            selectedDokterId = Integer.parseInt(parts[0]); // Ambil ID dokter
        } else {
            selectedDokterId = -1;
        }
    }//GEN-LAST:event_cbdokterActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        String idDokterStr = JOptionPane.showInputDialog(this, "Masukkan kode Dokter:", "Input kode Dokter", JOptionPane.PLAIN_MESSAGE);
        if (idDokterStr != null && !idDokterStr.trim().isEmpty()) {
            try {
                int idDokter = Integer.parseInt(idDokterStr);
                if (idDokter == selectedDokterId) {
                    loadPasienByDokter(idDokter);
                } else {
                    JOptionPane.showMessageDialog(this, "kode Dokter tidak sesuai dengan dokter yang dipilih!", "Error", JOptionPane.ERROR_MESSAGE);
                }
            } catch (NumberFormatException e) {
                JOptionPane.showMessageDialog(this, "Kode Dokter harus berupa angka!", "Error", JOptionPane.ERROR_MESSAGE);
            }
        } else {
            JOptionPane.showMessageDialog(this, "Kode Dokter tidak boleh kosong!", "Error", JOptionPane.ERROR_MESSAGE);
        }

    }//GEN-LAST:event_jButton1ActionPerformed
    private void loadPasienByDokter(int idDokter) {
        Connection conn = Koneksi.getConnection();
        String sql = "SELECT d.id_detail, d.nama, d.umur, d.jnsklmin, d.keluhan, d.alergi, d.status_pembayaran,d.status "
                + "FROM detail d WHERE d.id_dokter = ?"; // Ensure you filter by id_dokter

        try {
            PreparedStatement ps = conn.prepareStatement(sql);
            ps.setInt(1, idDokter);
            ResultSet rs = ps.executeQuery();

            DefaultTableModel model = new DefaultTableModel(new String[]{"id_pasien", "Nama Pasien", "Umur", "Jenis Kelamin", "Keluhan", "Alergi", "Status Pembayaran","status"}, 0);
            while (rs.next()) {
                Object[] row = new Object[8]; // Update size to 7 to include payment status
                row[0] = rs.getInt("id_detail");
                row[1] = rs.getString("nama");
                row[2] = rs.getInt("umur");
                row[3] = rs.getString("jnsklmin");
                row[4] = rs.getString("keluhan");
                row[5] = rs.getString("alergi");
                row[6] = rs.getString("status_pembayaran"); // Add payment status
                row[7] = rs.getString("status"); // Add payment status

                model.addRow(row);
            }

            if (model.getRowCount() > 0) {
                jTable1.setModel(model);
            } else {
                JOptionPane.showMessageDialog(this, "Tidak ada pasien yang terdaftar untuk ID Dokter ini.", "Info", JOptionPane.INFORMATION_MESSAGE);
                jTable1.setModel(new DefaultTableModel(new String[]{"id_pasien", "Nama Pasien", "Umur", "Jenis Kelamin", "Keluhan", "Alergi", "Status Pembayaran"}, 0)); // Kosongkan tabel
            }
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(this, "Gagal mengambil data pasien: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }
    }

    private void loadDokterAndSpesialis() {
        Connection conn = Koneksi.getConnection();
        String sql = "SELECT id_dokter, nama, spesialis, harga FROM dokter";

        try {
            PreparedStatement ps = conn.prepareStatement(sql);
            ResultSet rs = ps.executeQuery();

            DefaultComboBoxModel<String> dokterModel = new DefaultComboBoxModel<>();
            DefaultComboBoxModel<String> spesialisModel = new DefaultComboBoxModel<>();

            // Menambahkan item default
            dokterModel.addElement("---Pilih Dokter---");
            spesialisModel.addElement("---Dokter Spesialis ---");

            while (rs.next()) {
                int idDokter = rs.getInt("id_dokter");
                String namaDokter = rs.getString("nama");
                String spesialis = rs.getString("spesialis");
                Double harga = rs.getDouble("harga"); // Mengambil harga

                // Men ambahkan dokter ke combo box dengan format "id_dokter:nama_dokter"
                dokterModel.addElement(idDokter + "." + namaDokter);
                // Menambahkan spesialis ke combo box jika belum ada
                if (!spesialisModel.getElementAt(spesialisModel.getSize() - 1).equals(spesialis)) {
                    spesialisModel.addElement(spesialis);
                }
            }

            cbdokter.setModel(dokterModel);
            cbspesialis.setModel(spesialisModel);

        } catch (SQLException e) {
            e.printStackTrace();
        }
    }

    private void jLabel2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel2MouseClicked
        // TODO add your handling code here:
        HomePage hmpge = new HomePage();
        hmpge.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jLabel2MouseClicked

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        String saran = jTextArea1.getText().trim();

        if (saran.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Saran tidak boleh kosong!", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        int selectedRow = jTable1.getSelectedRow();
        if (selectedRow == -1) {
            JOptionPane.showMessageDialog(this, "Silakan pilih pasien dari tabel!", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        int idPasien = (int) jTable1.getValueAt(selectedRow, 0);
        saveRiwayatToDatabase(selectedDokterId, idPasien, saran);
    }

    private void saveRiwayatToDatabase(int idDokter, int idPasien, String saran) {
        Connection conn = Koneksi.getConnection();
        String sql = "UPDATE detail SET saran = ?, status = 'selesai' WHERE id_detail = ?"; // Update the saran and status in the detail table

        try {
            PreparedStatement ps = conn.prepareStatement(sql);
            ps.setString(1, saran); // Set the saran
            ps.setInt(2, idPasien); // Set the id_detail to identify which row to update
            int rowsUpdated = ps.executeUpdate();

            if (rowsUpdated > 0) {
                JOptionPane.showMessageDialog(this, "Saran berhasil dikirim dan status konsultasi ditandai sebagai selesai!", "Info", JOptionPane.INFORMATION_MESSAGE);
                jTextArea1.setText(""); 
                loadPasienByDokter(selectedDokterId); 
            } else {
                JOptionPane.showMessageDialog(this, "Gagal mengirim saran: ID Pasien tidak ditemukan.", "Error", JOptionPane.ERROR_MESSAGE);
            }
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(this, "Gagal mengirim saran: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // Confirm deletion
        int confirm = JOptionPane.showConfirmDialog(this, "Apakah Anda yakin ingin Keluar?", "Konfirmasi", JOptionPane.YES_NO_OPTION);
        if (confirm != JOptionPane.YES_OPTION) {
            return;
        } else {
            this.dispose();
        }

    }//GEN-LAST:event_jButton3ActionPerformed

    private void cbspesialisActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbspesialisActionPerformed
        String selectedSpecialization = (String) cbspesialis.getSelectedItem();
        if (!selectedSpecialization.equals("---Dokter Spesialis ---")) {
            loadDokterBySpesialis(selectedSpecialization);
        } else {
            cbdokter.setModel(new DefaultComboBoxModel<>(new String[]{"---Pilih Dokter---"}));
    }    }//GEN-LAST:event_cbspesialisActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                new HomePage().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> cbdokter;
    private javax.swing.JComboBox<String> cbspesialis;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel39;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextArea jTextArea1;
    // End of variables declaration//GEN-END:variables

    private void loadDokterBySpesialis(String spesialis) {
        Connection conn = Koneksi.getConnection();
        String sql = "SELECT id_dokter, nama FROM dokter WHERE spesialis = ?";

        try {
            PreparedStatement ps = conn.prepareStatement(sql);
            ps.setString(1, spesialis);
            ResultSet rs = ps.executeQuery();

            DefaultComboBoxModel<String> dokterModel = new DefaultComboBoxModel<>();
            dokterModel.addElement("---Pilih Dokter---"); // Add default option

            while (rs.next()) {
                int idDokter = rs.getInt("id_dokter");
                String namaDokter = rs.getString("nama");
                dokterModel.addElement(idDokter + "." + namaDokter); // Format: id_dokter.nama_dokter
            }

            cbdokter.setModel(dokterModel);
        } catch (SQLException e) {
            e.printStackTrace();
        }
    }
}
